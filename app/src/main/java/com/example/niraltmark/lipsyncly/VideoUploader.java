package com.example.niraltmark.lipsyncly;

import android.os.AsyncTask;
import android.os.Environment;
import android.view.View;

import java.io.File;
import java.io.IOException;
import java.util.Date;

import hu.szabot.transloadit.ITransloadit;
import hu.szabot.transloadit.Transloadit;
import hu.szabot.transloadit.TransloaditResponse;
import hu.szabot.transloadit.assembly.AssemblyBuilder;
import hu.szabot.transloadit.assembly.IAssemblyBuilder;
import hu.szabot.transloadit.exceptions.FileNotOpenableException;
import hu.szabot.transloadit.log.TransloaditLogger;

/**
 * Created by niraltmark on 4/21/2015.
 */
public class VideoUploader extends AsyncTask<Void, Void, Void> implements View.OnClickListener {

    private File file;

    public VideoUploader(File file)
    {
        this.file = file;
    }

    @Override
    public void onClick(View v) {
        execute();
    }

    @Override
    protected Void doInBackground(Void... params) {
        ITransloadit transloadit = new Transloadit("febb5ba0df6511e4b6c85b881c054f80");
        transloadit.useSignature("8715b483383b5c141e07421914a8325a2f6e7ac5");

        IAssemblyBuilder assembly = new AssemblyBuilder();

        assembly.setTemplateID("c170b0c0fada11e49d556126362797b9"); // The template for cropping
        assembly.setNotifyURL("http://lipsyncly.herokuapp.com/upload");
        assembly.setAuthExpires(new Date(new Date().getTime() + 120 * 60000));



        try {

            //Add a file to be uploaded with autogenerated key
            assembly.addFile(file);

        } catch (FileNotOpenableException e)
        {
            TransloaditLogger.logError(getClass(), e);
        }

        try
        {


            //Invoke assembly, and wait for the result
            TransloaditResponse response = transloadit.invokeAssembly(assembly);

            if (response.isSuccess())
            {
                TransloaditLogger.logInfo(getClass(), "Assembly %s result", (String)response.getData().get("assembly_id"));
            }
            else
            {
                TransloaditLogger.logError(getClass(), "Error has occured while completing assembly");
            }
        }catch (IOException e)
        {
            TransloaditLogger.logError(getClass(), e, "Error has occured while completing assembly");
        }

        return null;
    }
}
